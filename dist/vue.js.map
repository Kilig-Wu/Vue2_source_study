{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/globalAPI.js","../src/observe/dep.js","../src/observe/array.js","../src/observe/index.js","../src/observe/watcher.js","../src/state.js","../src/compiler/parse.js","../src/compiler/index.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/init.js","../src/index.js"],"sourcesContent":["\r\nconst strats = {};\r\nconst LIFECYCLE = [\r\n    'beforeCerated',\r\n    'created'\r\n]\r\nLIFECYCLE.forEach(hook => {\r\n    // {} {created: function() {}} => {created: [fn]}  一个mixin\r\n    // {created: [fn]} {created: function() {}} => { created: [fn, fn] }  2个mixin\r\n    //{ created: [fn, fn] } {created: function() {}} => { created: [fn, fn, fn] }  3个mixin\r\n    strats[hook] = function (p, c) {\r\n        if (c) {\r\n            if (p) {\r\n                return p.concat(c)\r\n            } else {\r\n                return [c]\r\n            }\r\n        } else {\r\n            return p\r\n        }\r\n    }\r\n})\r\nstrats.components = function(parentVal, childVal) {\r\n    const res = Object.create(parentVal);\r\n    if(childVal) {\r\n        for(let key in childVal) {\r\n            res[key] = childVal[key]  //返回的是构造的对象， 可以拿到父亲原型上的属性 并且将儿子的都拷贝到自己的身上\r\n        }\r\n    }\r\n    return res\r\n}\r\n// strats.data = function() { //合并data\r\n// }\r\n// strats.computed = function() {\r\n// }\r\n// strats.watch = function() {\r\n// }\r\nexport function mergeOptions(parent, child) {\r\n    const options = {};\r\n    for(let key in parent) {\r\n        mergeField(key)\r\n    }\r\n    for(let key in child) {\r\n        if(!parent.hasOwnProperty(key)) {\r\n            mergeField(key)\r\n        }\r\n    }\r\n    function mergeField(key) {\r\n        //策略模式减少if/else(策略很多，因为生命周期很多)\r\n        if(strats[key]) {\r\n            options[key] = strats[key](parent[key], child[key])\r\n        } else {\r\n            //如果不在策略中则以儿子为主\r\n            options[key] = child[key] || parent[key]   //优先采用儿子，再采用父亲\r\n        }\r\n    }\r\n    return options\r\n}","import { mergeOptions } from \"./utils\";\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    //静态方法\r\n    Vue.options = {\r\n        _base: Vue\r\n    };  \r\n    Vue.mixin = function (mixin) {\r\n        //我们期望将用户的options和全局的options进行合并\r\n        this.options = mergeOptions(this.options, mixin);\r\n        return this\r\n    }\r\n\r\n    \r\n    //可以手动创建组件进行挂载\r\n    Vue.extend = function (options) {\r\n        function Sub(options = {}) {  //最终使用一个组件 就是new一个实例\r\n            this._init(options)  //默认对子类进行初始化操作\r\n        }\r\n        Sub.prototype = Object.create(Vue.prototype)   //Sub.prototype.__proto__ = Vue.prototype   Sub继承Vue\r\n        Sub.prototype.constructor = Sub   //Object.create创建的Sub.prototype会默认指向Sub的父类Vue\r\n        Sub.options = mergeOptions(Vue.options, options);  //保存用户传的选项\r\n        return Sub\r\n    }\r\n\r\n    Vue.options.components = {};   //全局指令 Vue.options.derectives\r\n    Vue.component = function(id, definition) {\r\n        //如果definition已经是一个函数了，说明用户自己调用了Vue.extend\r\n        definition = typeof definition === 'function' ? definition : Vue.extend(definition)\r\n        Vue.options.components[id] = definition;\r\n    }\r\n}","let id = 0;\r\n//收集器\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++;  //\r\n        this.subs = []  //存放属性对应的所有watcher（一个属性可以用在a组件， b组件， c组件）\r\n    }\r\n    //收集watcher\r\n    depend() {\r\n        //此法不行：不希望放重复的watcher，且只是单向关系（希望双向） dep->watcher\r\n        // this.subs.push(Dep.target)\r\n\r\n        Dep.target.addDep(this) //Dep.target是当前watcher。把当前dep传给了Watcher(让当前watcher记住dep)\r\n    };\r\n    addSub(watcher) {\r\n        this.subs.push(watcher) //dep记住watcher\r\n    };\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update()) //告诉watcher要更新了\r\n    }\r\n}\r\nDep.target = null;\r\n\r\nlet stack = [];\r\nexport function pushTarget(watcher) {  //渲染时，watcher入栈\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\nexport function popTarget() {  //渲染完后watcher出栈,清空\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1]\r\n}\r\n\r\nexport default Dep","//重写数组中的部分方法\r\nlet oldArrayProto = Array.prototype   //获取数组的原型\r\n\r\n//newArrayProto.__proto__ = oldArrayProto\r\nexport let newArrayProto = Object.create(oldArrayProto)\r\nlet methods = [ 'push', 'pop', 'shift', 'unshift', 'reverse', 'sort', 'splice']\r\n\r\nmethods.forEach(method => {\r\n    newArrayProto[method] = function(...args) {   //这里重写了数组的方法\r\n        const result = oldArrayProto[method].call(this, ...args)  //内部调用原来的方法（函数的劫持、切片编程）\r\n\r\n        //我们需要对新增的数据再进行劫持\r\n        let inserted;\r\n        let ob = this.__ob__;\r\n        switch(method) {\r\n            case 'push':\r\n            case 'unshift':   //arr.unshift(1, 2, 3)\r\n                inserted = args;\r\n                break;\r\n            case 'splice':     //arr.splice(0, 1, { a: 1 }, {a: 1})\r\n                inserted = args.slice(2);  \r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted) {  //如果有新增的内容，要对新增的内容再次进行观测\r\n            ob.observeArray(inserted)\r\n        }\r\n        \r\n        ob.dep.notify();  //数组变化了，通知对应的watcher更新\r\n\r\n        return result\r\n    }\r\n})","import { newArrayProto } from './array'\r\nimport Dep from './dep'\r\nclass Observer {\r\n    constructor(data) {\r\n        //给每个对象都增加收集功能\r\n        this.dep = new Dep()\r\n\r\n        //Object.defineProperty只能劫持已经存在的属性（删除新增的都没法，vue2里会单独写一些api $set $delete）\r\n        Object.defineProperty(data, '__ob__', {  //可枚举的话会进入死循环\r\n            value: this,\r\n            enumerable: false //将__ob__ 变成不可枚举（循环时无法获取到）\r\n        })\r\n        // data.__ob__ = this;  //给数据加了一个标识， 如果数据上有__ob__则说明这个属性被观测过了\r\n\r\n        if(Array.isArray(data)) {\r\n            //如果是数组的话，需要对数组新增的属性去做判断，并且对新增的属性进行观测\r\n            //这里重写数组的方法（数组劫持的核心就是重写数组的方法，并且去观测数组中的每一项）\r\n            data.__proto__ = newArrayProto  //需要保留数组原有的特性，并可以重写部分方法\r\n            this.observeArray(data)  //观测数组里的属性，如果数组里有对象，可以监控到对象的变化\r\n        } else {\r\n            this.walk(data)\r\n        }\r\n    };\r\n    walk(data) {  //循环对象，对属性依次劫持\r\n\r\n        //“重新定义”属性-》性能差\r\n        Object.keys(data).forEach(key => defineReactive(data, key, data[key]))\r\n    };\r\n    observeArray(data) {\r\n        data.forEach(item => observe(item))\r\n    }\r\n}\r\n//深层次嵌套会递归，递归多了性能差，不存在的属性性能差，存在的属性要重写方法（push, pop等）\r\nfunction dependArray(value) {\r\n    for(let i = 0; i < value.length; i++) {\r\n        //数组的每一项都依赖收集\r\n        let current = value[i];\r\n        current.__ob__ && current.__ob__.dep.depend();\r\n        if(Array.isArray(current)) {\r\n            dependArray(current)\r\n        }\r\n    }\r\n}\r\nexport function defineReactive(target, key, value) {  //闭包 属性劫持\r\n    let childOb = observe(value); //对所有的对象进行属性劫持（递归）,childOb.dep用来收集依赖的\r\n    let dep = new Dep(); //每一个属性都有一个dep（收集器）\r\n    Object.defineProperty(target, key, {\r\n        get() {  //取值执行\r\n            if(Dep.target) {\r\n                dep.depend();  //让这个属性的收集器记住当前的watcher\r\n                if(childOb) {\r\n                    childOb.dep.depend()  //让数组和对象也实现依赖收集（使用push等方法可以触发更新）\r\n                    if(Array.isArray(value)) {   // arr: [1, 2, 3, { a:1}, ['a', 'b']],  给['a', 'b']添加依赖收集\r\n                        dependArray(value)\r\n                    }\r\n                }\r\n            }\r\n            return value\r\n        },\r\n        set(newValue) {  //修改执行\r\n            if(newValue === value) return\r\n            observe(newValue)\r\n            value = newValue;\r\n            //观察者身份 Obverser，当数据变化后，会发送通知给Dep对象，也就是发布订阅模式中的时间中心（经纪人），然后又Dep 告诉订阅着 Watcher 对象， Watcher 便响应式地触发了 render重新渲染的过程。\r\n            dep.notify()  //通知更新\r\n        }\r\n    })\r\n}\r\n\r\nexport function observe(data) {\r\n    //对这个对象进行劫持\r\n\r\n    if(typeof data !== 'object' || data == null) {\r\n        return; //只对对象进行劫持\r\n    }\r\n    /**\r\n     * instanceof 用于检测构造函数的 prototype 属性是否出现在某个实例对象的原型链上。\r\n     * 语法：object instanceof constructor [object：某个实例对象  constructor：某个构造函数]\r\n     * **/\r\n    if(data.__ob__ instanceof Observer) {  //说明这个对象被代理过了\r\n        return data.__ob__\r\n    }\r\n    //如果一个对象被劫持过了，那就不需要再被劫持了（要判断一个对象是否被劫持过，可以添加一个实例，用实例来判断是否被劫持过）\r\n    return new Observer(data)\r\n}","import Dep, { popTarget, pushTarget } from \"./dep\";\r\n\r\nlet id = 0;\r\n//组件化好处：方便，复用，局部更新\r\n\r\n\r\n//1) 当我们创建渲染watcher的时候我们会把当前的渲染watcher方法Dep.target上\r\n//2)调用_render() 会取值 走到Object.defineProperty的get上\r\n\r\nclass Watcher {   //每个组件都有自己的watcher new Watcher  exprOrfn: 表达式或函数\r\n    constructor(vm, exprOrfn, options, cb) {  //vm: 当前watcher对应的是哪个实例 fn: 这个实例对应的渲染函数vm._update(vm._render())\r\n        this.id = id++;\r\n        this.renderWatcher = options  //是一个渲染watcher\r\n\r\n        if(typeof exprOrfn === 'string') {\r\n            this.getter = function() {\r\n                return vm[exprOrfn]\r\n            } \r\n        } else {\r\n            this.getter = exprOrfn;  //getter意味着调用这个函数可以发生取值操作\r\n        }\r\n        this.deps = [];   //watcher记住dep（以便实现计算属性、一些清理工作（组件卸载））\r\n        this.depIds = new Set();\r\n        this.lazy = options.lazy;\r\n        this.cb = cb;\r\n        this.dirty = this.lazy; //缓存值\r\n        this.vm = vm;\r\n        this.user = options.user  //标识是否是用户自己的watcher\r\n\r\n        this.value = this.lazy ? undefined :  this.get();\r\n    };\r\n    addDep(dep) {  //一个组件对应多个属性，重复的属性不用记录\r\n        let id = dep.id;\r\n        if (!this.depIds.has(id)) {\r\n            this.deps.push(dep);\r\n            this.depIds.add(id);\r\n            dep.addSub(this); //watcher记住了dep而且去重了，此时dep也记住了watcher\r\n        }\r\n    };\r\n    evaluate() {\r\n        this.value = this.get();  //获取到用户函数的返回值，并且标识为脏\r\n        this.dirty = false;\r\n    };\r\n    get() {\r\n        // Dep.target = this; //静态属性  \r\n        pushTarget(this) //静态属性；在渲染页面之前给dep添加watcher（会把当前的渲染watcher放到Dep.target上）\r\n\r\n        let value = this.getter.call(this.vm)  //渲染页面，会去vm上取值, vm._ipdate(vm._render)取name和age\r\n        \r\n        // Dep.target = null; //渲染完毕清空\r\n        popTarget()  //渲染完毕清空 在渲染页面之后给dep取消watcher\r\n\r\n        return value\r\n    };\r\n    //watcher里的depend就是让wahtcher中的dep去depend\r\n    depend() {\r\n        let i = this.deps.length;\r\n        while(i--) {\r\n            //dep.depend()\r\n            this.deps[i].depend();  //让计算属性watcher的dep也收集渲染watcher\r\n        }\r\n    };\r\n    update() {\r\n        if(this.lazy) {\r\n            //如果是计算属性,计算的值变化了 就标识计算属性是脏值了\r\n            this.dirty = true;\r\n        } else {\r\n            queueWatcher(this);  //把当前的watcher暂存\r\n            // this.get(); //重新渲染\r\n        }\r\n    };\r\n    run() {\r\n        let oldValue = this.value;\r\n        let newValue = this.get();  \r\n        if(this.user) {\r\n            this.cb.call(this.vm, newValue, oldValue)\r\n        }\r\n    }\r\n}\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false; //防抖\r\n\r\nfunction flushSchedulerQueue() {\r\n    let flushQueue = queue.splice(0);  //拷贝一份queue\r\n    queue = [];\r\n    has = {}\r\n    pending = false;\r\n    flushQueue.forEach(q => q.run()); //在属性过程中可能还有新的watcher,重新放到queue中\r\n}\r\n//异步更新\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if (!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        //不管update执行多少次，但是最终只执行一轮刷新操作(防抖)\r\n        if (!pending) {\r\n            nextTick(flushSchedulerQueue)\r\n            pending = true;\r\n        }\r\n    }\r\n}\r\n\r\n //异步批处理，如果单纯的添加setTimeout会很耗性能\r\nlet callbacks = [];\r\nlet waiting = false;\r\nfunction flushCallbacks() {\r\n    let cbs = callbacks.splice(0)\r\n    waiting = false;\r\n    callbacks = [];\r\n    cbs.forEach(cb => cb())\r\n}\r\n//nextTick没有直接使用某个api 而是采用优雅降级的方式\r\n//内部先采用的promise(ie不兼容) -》MutationObserver(h5的api) -》可以考虑ie专用的setImmediate -》setTimeout（优先级和效率排序）\r\nlet timerFunc;\r\nif(Promise) {  //可以把Promise转成字符串toString，判断是不是原生的Promise\r\n    timerFunc = () => {\r\n        Promise.resolve().then(flushCallbacks)  //vue3中直接使用这个，不兼容ie\r\n    }\r\n} else if(MutationObserver) {\r\n    let observer = new MutationObserver(flushCallbacks); //这里传入的回调时异步执行的\r\n    let textNode = document.createTextNode(1); //监控文本的变化\r\n    observer.observe(textNode, {\r\n        characterData: true\r\n    })\r\n    timerFunc = () => {\r\n        textNode.textContent = 2;  //文本变了执行flushCallbacks\r\n    }\r\n} else if(setImmediate) {\r\n    timerFunc = () => {\r\n        setImmediate(flushCallbacks)\r\n    }\r\n} else if(setTimeout) {\r\n    timerFunc = () => {\r\n        setTimeout(flushCallbacks)\r\n    }\r\n}\r\nexport function nextTick(cb) {  \r\n    callbacks.push(cb);  //维护nextTick中的callback方法\r\n    if(!waiting) {\r\n        timerFunc()  //最后一起刷新\r\n        // setTimeout(() => { \r\n        //     flushCallbacks()  \r\n        // }, 0);\r\n        waiting = true;\r\n    }\r\n}\r\n// 给每个属性增加一个dep,目的就是为了收集watcher\r\n//1个视图（组件）中有多个属性（n个属性会对应一个视图）-》n个dep对应一个watcher\r\n//1个属性对应多个视图(组件) -》1个dep对应多个watcher\r\nexport default Watcher","\r\nimport Dep from \"./observe/dep\";\r\nimport { observe } from \"./observe/index\";\r\nimport Watcher, { nextTick } from './observe/watcher'\r\n\r\nexport function initState(vm) {\r\n    const opts = vm.$options //获取所有的选项\r\n\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm)\r\n    }\r\n}\r\nfunction initWatch(vm) {\r\n    let watch = vm.$options.watch;\r\n    for (let key in watch) {\r\n        const handler = watch[key]  //字符串、数组、函数、对象\r\n        if (Array.isArray(handler)) {\r\n            for (let i = 0; i < handler.length; i++) {\r\n                createWatcher(vm, key, handler[i])\r\n            }\r\n        } else {\r\n            createWatcher(vm, key, handler)\r\n        }\r\n    }\r\n}\r\nfunction createWatcher() {\r\n    //字符串 函数 对象（未处理对象）\r\n    if (typeof handler === 'string') {\r\n        handler = vm[handler]  //取methods里的方法\r\n    }\r\n    return vm.$watch(key, handler)\r\n}\r\n\r\nfunction proxy(vm, target, key) {\r\n    Object.defineProperty(vm, key, { //vm.name\r\n        get() {\r\n            return vm[target][key]  //vm._data.name\r\n        },\r\n        set(newValue) {\r\n            vm[target][key] = newValue;\r\n        }\r\n    })\r\n};\r\nfunction initData(vm) {\r\n    let data = vm.$options.data  //data可能是函数和对象\r\n    data = typeof data === 'function' ? data.call(vm) : data;\r\n    vm._data = data;\r\n\r\n    //数据劫持: vue2:defineProperty\r\n    observe(data);\r\n\r\n    //将vm._data用vm来代理\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n    const computed = vm.$options.computed;\r\n    const watchers = vm._computedWatchers = {};   //vm._computedWatchers是为了在createComputedGetter函数中拿到watcher\r\n    for (let key in computed) {\r\n        let userDef = computed[key];\r\n\r\n        //需要监控计算属性的get方法(防止多次触发同一个)\r\n        let getter = typeof userDef === 'function' ? userDef : userDef.get;\r\n        watchers[key] = new Watcher(vm, getter, { lazy: true })  //lazy: true;->new Watcher时fn不会立即执行\r\n\r\n        defineComputed(vm, key, userDef)\r\n    }\r\n}\r\nfunction defineComputed(target, key, userDef) {\r\n    const setter = userDef.set || (() => { })\r\n    Object.defineProperty(target, key, {\r\n        get: createComputedGetter(key),\r\n        set: setter\r\n    })\r\n}\r\n//计算属性根本不会收集依赖，只会让自己的依赖去收集依赖\r\nfunction createComputedGetter(key) {\r\n    //我们检测需要是否执行这个getter\r\n    return function () {\r\n        const watcher = this._computedWatchers[key]   //获取到对应属性的watcher\r\n        if (watcher.dirty) {\r\n            //如果是脏的，就执行用户传入的函数\r\n            watcher.evaluate()  //求值后dirty变为false, 下次就不求值了\r\n        }\r\n        if (Dep.target) {  //计算属性出栈后是否有渲染过程，如果有，我应该让计算属性watcher里的属性也去收集上一层watcher(渲染warcher)\r\n            watcher.depend()   //不执行这一步的话，页面只是更新了计算属性的值 却不会重新渲染页面\r\n        }\r\n        return watcher.value  //最后返回的是watcher上的值\r\n    }\r\n}\r\n\r\nexport function initStateMixin(Vue) {\r\n    Vue.prototype.$nextTick = nextTick\r\n\r\n    //exprOrFn：表达式或  cb:回调   options：{ deep： ture }=>未处理\r\n    Vue.prototype.$watch = function (exprOrFn, cb) {\r\n        //firstname的值变化了 直接执行cb函数即可\r\n        new Watcher(this, exprOrFn, { user: true }, cb)\r\n    }\r\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`;\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);   //匹配到的是一个开始标签名<div\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)  //匹配到的是一个结束标签名</div\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;  //匹配属性,第一个分组是属性的key value就是分组3/分组4/分组5\r\nconst startTagClose = /^\\s*(\\/?)>/;   //<div><br />  //开始标签的结束\r\n\r\n//解析html生成抽象dom树（也有解析html的包：htmlparser2）\r\nexport function parseHTML(html) {   //html最开始肯定是<\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n    const stack = [];   //用于存放元素\r\n    let currentParent;  //指向栈中最后一个\r\n    let root;   //当前树的根节点\r\n\r\n    //最终需要转化成一颗抽象语法树（父元素下有子元素）\r\n    function createASTElement(tag, attrs) {\r\n        return {\r\n            tag,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n    //利用栈型结构 来构造一棵树\r\n    function start(tag, attrs) {\r\n        let node = createASTElement(tag, attrs);\r\n        if (!root) {    //看一下是否是空树\r\n            root = node   //如果为空则当前是树的根节点\r\n        }\r\n        if(currentParent) {\r\n            node.parent = currentParent;   //只赋予了parent属性\r\n            currentParent.children.push(node);   //还需要让父亲记住自己\r\n        }\r\n        stack.push(node);\r\n        currentParent = node;  //currentParent为栈中最后一个\r\n    }\r\n    function chars(text) {   //文本直接放到当前指向的节点中\r\n        text = text.replace(/\\s/g, '')  //如果空格超过两个就删除两个以上的\r\n        text && currentParent.children.push({ type: TEXT_TYPE, text, parent: currentParent })\r\n\r\n    }\r\n    function end(tag) {\r\n        let node = stack.pop(); //弹出最后一个, 校验标签是否合法\r\n        currentParent = stack[stack.length - 1]\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n)\r\n    }\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],  //标签名\r\n                attrs: []\r\n            }\r\n            advance(start[0].length)\r\n\r\n            //如果不是开始标签的结束,就一直匹配下去\r\n            let attr, end;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                advance(attr[0].length)\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] || true })  //style的name,value需要去除空格\r\n            }\r\n            if (end) {\r\n                advance(end[0].length)\r\n            }\r\n            return match\r\n        }\r\n        return false;  //不是开始标签\r\n\r\n    }\r\n    while (html) {\r\n        //如果textEnd=0 说明是一个开始标签或者结束标签\r\n        //如果textEnd>0 说明是文本的结束位置\r\n        let textEnd = html.indexOf('<')   //如果indexOf的索引是0 则说明是个标签\r\n        if (textEnd == 0) {\r\n            const startTagMatch = parseStartTag();\r\n            if (startTagMatch) {  //解析到的开始标签\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue;\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {    //解析到的结束标签\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n        }\r\n        if (textEnd > 0) {\r\n            let text = html.substring(0, textEnd)  //文本内容\r\n            if (text) {\r\n                chars(text);\r\n                advance(text.length);  //解析到的文本\r\n            }\r\n        }\r\n    }\r\n    return root\r\n}","import { parseHTML } from \"./parse\";\r\n\r\nfunction getProps(attrs) {\r\n    let str = '' //{name, value}\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            // color: red => { color: 'red' }\r\n            attr.value = attr.value.split(';').reduce((target, item) => { //qs库解析也行\r\n                let [key, value] = item.split(':');\r\n                target[key] = value\r\n                return target\r\n            }, {});\r\n\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`   //删除最后一个逗号\r\n}\r\n\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g   //{{ aaa }}   //匹配到的内容就是表达式的变量\r\nfunction gen(node) {\r\n    if (node.type === 1) {\r\n        //是元素\r\n        return codegen(node)\r\n    } else {\r\n        //文本\r\n        let text = node.text;\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        } else {\r\n            //_v(_s(name) + 'hello' + _s(name))\r\n            let tokens = [];\r\n            let match;\r\n            defaultTagRE.lastIndex = 0;   //exec捕获清零，重置位置\r\n            let lastIndex = 0;\r\n            while (match = defaultTagRE.exec(text)) {\r\n                let index = match.index;   //匹配到变量的位置{{name}} hello {{ age }} hello;\r\n                if (index > lastIndex) {   \r\n                    tokens.push(JSON.stringify(text.slice(lastIndex, index)))  //得到通配符中间的文本\r\n                }\r\n                tokens.push(`_s(${match[1].trim()})`);\r\n                lastIndex = index + match[0].length\r\n            }\r\n            if(lastIndex < text.length) {   //防止最后一个通配符后还有文本\r\n                tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n            }\r\n            return `_v(${tokens.join('+')})`\r\n        }\r\n    }\r\n}\r\nfunction getChildren(children) {\r\n    return children.map(child => gen(child)).join(',')\r\n}\r\nfunction codegen(ast) {\r\n    let children = getChildren(ast.children);\r\n    let code = ` _c('${ast.tag}', ${ast.attrs.length > 0 ? getProps(ast.attrs) : 'null'}${ast.children.length ? `,${children}` : ''})`;\r\n    return code\r\n}\r\n\r\n//vue3采用的不是正则\r\nexport function compileToFunction(template) {\r\n    //1.就是将template转化成ast语法树\r\n    let ast = parseHTML(template);\r\n    \r\n    //2.生成render方法（render方法执行后的返回结果就是虚拟Dom）\r\n    //模板引擎的实现原理就是with + new Function\r\n    let code = codegen(ast);\r\n    code = `with(this){return ${code}}`   //with的用法\r\n    let render = new Function(code); //根据代码生成render函数\r\n    return render\r\n}","//h() _c()\r\n//是否原始标签（是组件还是原生标签）\r\nconst isReservedTag = (tag) => {\r\n    return ['a', 'div', 'p','button', 'ul', 'li', 'span'].includes(tag)\r\n}\r\nexport function createElementVNode(vm, tag, data = {}, ...children) {\r\n    if(data == null) {\r\n        data = {}\r\n    }\r\n    let key = data.key;\r\n    if(key) {\r\n        delete data.key\r\n    }\r\n    if(isReservedTag(tag)) {\r\n        //原始标签\r\n        return vnode(vm, tag, key, data, children)\r\n    } else {\r\n        //组件\r\n        let Ctor = vm.$options.components[tag] //组件的构造函数\r\n        return createComponentVnode(vm, tag, key, data, children, Ctor)\r\n    }\r\n} \r\n\r\nfunction createComponentVnode(vm, tag, key, data, children, Ctor) {\r\n    if(typeof Ctor === 'object') {\r\n        //Vue.extend(Ctor)\r\n        Ctor = vm.$options._base.extend(Ctor)\r\n    }\r\n    data.hook = {\r\n        init(vnode) {  //稍后创造真实节点的时候 如果是组件调用此init方法\r\n            //保存组件的实例到虚拟节点上\r\n            let instance = vnode.componentInstance = new vnode.componentOptions.Ctor;\r\n            instance.$mount();   //instance.$el\r\n        }\r\n    }\r\n    return vnode(vm, tag, key, data, children, null, { Ctor })\r\n}\r\n\r\n//_v()\r\nexport function createTextVNode(vm, text) {\r\n    return vnode(vm, undefined, undefined, undefined, undefined, text)\r\n}\r\n\r\n//ast做的是语法的转化 描述的是语法本身（可以描述js css html）\r\n//我们的虚拟dom 是描述dom元素，可以增加一些自定义属性（描述dom的）\r\nfunction vnode(vm, tag, key, data, children, text, componentOptions) {\r\n    return { \r\n        vm, \r\n        tag, \r\n        key, \r\n        data, \r\n        children, \r\n        text ,\r\n        componentOptions  //包含组件的构造函数\r\n    }\r\n}\r\n\r\n//判断两节点是否同一节点\r\nexport function isSameVNode(vnode1, vnode2) {\r\n    return vnode1.tag ===  vnode2.tag && vnode1.key === vnode2.key\r\n}\r\n","import { isSameVNode } from \"./index\";\r\n\r\nfunction createComponent(vnode) {\r\n    let i = vnode.data;\r\n    if((i = i.hook) && (i = i.init)) {\r\n        i(vnode)  //初始化组件,找到init方法\r\n    }\r\n    if(vnode.componentInstance) {\r\n        return true   //说明是组件\r\n    }\r\n}\r\nexport function createElm(vnode) {\r\n    let { tag, data, children, text } = vnode;\r\n    if(typeof tag === 'string') {  //标签\r\n\r\n        //创建真实元素 也要判断是组件还是元素\r\n        if(createComponent(vnode)) {\r\n            //组件 vnode.componentInstance.$el\r\n            return vnode.componentInstance.$el\r\n        }\r\n\r\n        vnode.el = document.createElement(tag) //这里将真实节点和虚拟节点对应起来，后续如果修改了（属性等），可以直接找到虚拟节点对应的真实节点来进行修改\r\n\r\n        patchProps(vnode.el, {}, data);  //更新属性\r\n        children.forEach(child => {\r\n            vnode.el.appendChild(createElm(child))\r\n        });\r\n    } else { //文本\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n}\r\n\r\n//设置属性\r\nexport function patchProps(el, oldProps = {}, props = {}) {\r\n\r\n    // 老的样式中有 新的没有，需要删除老的\r\n    let oldStyles = oldProps.style || {};\r\n    let newStyles = props.style || {};\r\n    for(let key in oldStyles) {\r\n        if(!newStyles[key]) {\r\n            el.style[key] = ''\r\n        }\r\n    }\r\n    for(let key in oldProps) {  //老的属性有新的没有\r\n        if(!props[key]) {\r\n            el.removeAttribute(key)\r\n        }\r\n    }\r\n\r\n    for(let key in props) {  //用新的覆盖老的\r\n        if(key === 'style') {\r\n            //如果是样式\r\n            for(let styleName in props.style) {\r\n                el.style[styleName] = props.style[styleName];\r\n            }\r\n        } else {\r\n            el.setAttribute(key, props[key])\r\n        }\r\n    }\r\n}\r\n\r\nexport function patch(oldVNode, vnode) {\r\n    if(!oldVNode) {  //oldVNode不存在就是组件的挂载\r\n        return createElm(vnode)   //$vm.$el就是组件渲染的结果\r\n    }\r\n    //\r\n    const isRealElement = oldVNode.nodeType;  //nodeType为dom原生方法\r\n    //是否真实元素\r\n    if(isRealElement) {\r\n        const elm = oldVNode;\r\n        const parentElm = elm.parentNode  //获取父元素\r\n        let newElm = createElm(vnode)  //新dom\r\n        parentElm.insertBefore(newElm, elm.nextSibling)  //把新生成的节点插入到老节点后面 insertBefore(newNode, referenceNode) 方法在参考节点之前插入一个拥有指定父节点的子节点  nextSibling 属性可返回某个元素之后紧跟的元素\r\n        parentElm.removeChild(elm)  //删除老节点\r\n\r\n        return newElm  //返回新dom\r\n    } else {\r\n        //diff算法\r\n        //1.两个节点不是同一个节点，直接删除老的换上新的\r\n        //2.两个节点是同一个节点（判断节点的tag和key）,比较两个节点的属性是否有差异（复用老的节点 ，将差异的属性更新）\r\n        //3.节点比较完毕后就需要比较两人的儿子\r\n\r\n        patchVNode(oldVNode, vnode)\r\n\r\n       \r\n    }\r\n}\r\nfunction patchVNode(oldVNode, vnode) {\r\n     //不相同节点\r\n     if(!isSameVNode(oldVNode, vnode)) {\r\n        //两节点不是同一节点， 用老节点的父亲进行替换\r\n        let el = createElm(vnode);\r\n        oldVNode.el.parentNode.replaceChild(el, oldVNode.el)\r\n        return el;\r\n    }\r\n\r\n    //相同节点\r\n    let el = vnode.el = oldVNode.el;  //复用老节点的元素\r\n    //是文本\r\n    if(!oldVNode.tag) {\r\n        if(oldVNode.text !== vnode.text) {\r\n            el.textContent = vnode.text  //用新文本替换老的\r\n        }\r\n    }\r\n    //是标签   需要比较标签的属性   vnode.data-新标签的属性    oldVNode.data-老标签的属性\r\n    patchProps(el,oldVNode.data, vnode.data)\r\n\r\n    //比儿子节点（1.一方有儿子，一方没儿子2.两方都有儿子）\r\n    let newChildren = oldVNode.children || [];\r\n    let oldChildren = vnode.children || [];\r\n    if(oldChildren.length > 0 && newChildren.length > 0) {\r\n        //两个都有儿子，比较两人的儿子\r\n        updateChildren(el, oldChildren, newChildren)\r\n    } else if(newChildren.length > 0) {\r\n        //老的没有儿子， 新的有儿子（把新的儿子放老的里面）\r\n        mountChildren(el, newChildren);\r\n    } else if(oldChildren.length > 0) {\r\n        //老的有儿子， 新的没有儿子（把老的儿子都删了）\r\n        el.innerHTML = '';   //innerHTML不太安全（此处是为了方便），可以循环删除\r\n    }\r\n\r\n    return el\r\n}\r\nfunction mountChildren(el, newChildren) {\r\n    for(let i = 0; i < newChildren.length; i++) {\r\n        let child = newChildren[i];\r\n        el.appendChild(createElm(child))\r\n    }\r\n}\r\n\r\n\r\nfunction updateChildren(el, oldChildren, newChildren) {\r\n    //vue2中采用双指针的方式比较两个节点\r\n    let oldStartIndex = 0;\r\n    let newStartIndex = 0;\r\n    let oldEndIndex = oldChildren.length - 1;\r\n    let newEndIndex = newChildren.length - 1;\r\n\r\n    let oldStartVnode = oldChildren[0];\r\n    let newStartVnode = newChildren[0];\r\n\r\n    let oldEndVnode = oldChildren[oldEndIndex];\r\n    let newEndVnode = newChildren[newEndIndex];\r\n\r\n    function makeIndexByKey(children) {\r\n        let map = {}  //key和索引的映射\r\n        children.forEach((child, index) => {\r\n            map[child.key] = index\r\n        })\r\n        return map\r\n    }\r\n    let map =  makeIndexByKey(oldChildren);\r\n    while(oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\r\n        //双方有一方头指针大于尾指针则停止循环\r\n        if(!oldStartVnode) { //1\r\n            oldStartVnode = oldChildren[++oldStartIndex]\r\n        } else if(!oldEndVnode) { //1\r\n            oldEndVnode = oldChildren[--oldEndIndex]\r\n        } else if(isSameVNode(oldStartVnode,newStartVnode)) {    \r\n            //从前往后比 abcd -> abcde\r\n            patchVNode(oldStartVnode,newStartVnode)  //如果相同，则递归比较字节点\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        } else if(isSameVNode(oldEndVnode,newEndVnode)) {  \r\n            //从后往前比 abcd -> eabcd\r\n            patchVNode(oldEndVnode,newEndVnode)  //如果相同，则递归比较字节点\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        } else if(isSameVNode(oldEndVnode,newStartVnode)) {  //\r\n            //交叉比 abcd -> dcba\r\n            patchVNode(oldEndVnode,newStartVnode)  //如果相同，则递归比较字节点\r\n            el.insertBefore(oldEndVnode.el, oldStartVnode.el)\r\n            oldEndVnode = oldChildren[--oldEndIndex];\r\n            newStartVnode = newChildren[++newStartIndex];\r\n        } else if(isSameVNode(oldStartVnode,newEndVnode)) {  //\r\n            //交叉比 dcba -> abcd\r\n            patchVNode(oldStartVnode,newEndVnode)  //如果相同，则递归比较字节点\r\n            el.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\r\n            oldStartVnode = oldChildren[++oldStartIndex];\r\n            newEndVnode = newChildren[--newEndIndex];\r\n        } else {\r\n            //乱序比对（根据老的列表做一个映射关系）abcd -> bmapcq\r\n            let moveIndex = map[newStartVnode.key];\r\n            if(moveIndex !== undefined) {\r\n                let moveVnode = oldChildren[mapIndex]; //找到对应的虚拟节点复用\r\n                el.insertBefore(moveVnode.el, oldStartVnode.el);\r\n                oldChildren[moveIndex] = undefined;  //表示这个节点已经移走了(会导致添加1处的判断)\r\n                patchVNode(moveVnode, newStartVnode)  //比对属性和节点\r\n            } else {\r\n                el.insertBefore(createElm(newStartVnode), oldStartVnode.el)\r\n            }\r\n            newStartVnode = newChildren[++newStartIndex]  //新列表开始指针不停后移\r\n        }\r\n\r\n        if(newStartIndex <= newEndIndex) {  //新的多余的就新增的插入进去\r\n            for(let i = newStartIndex; i <= newEndIndex; i++) {\r\n                let chidEl = createElm(newChildren[i]);\r\n                //可能向前可能向后追加\r\n                let anchor = newChildren[newEndIndex + 1] ? newChildren[newEndIndex + 1].el : null  //获取下一个元素\r\n                el.insertBefore(chidEl, anchor); //anchor为null的时候则会认为是appendchild\r\n            }\r\n        }\r\n        if(oldStartIndex <= oldEndIndex) {  //老的多余的就删除多余的老的\r\n            for(let i = oldStartIndex; i <= oldEndIndex; i++) {\r\n                if(oldChildren[i]) { //1\r\n                    let childEl = oldChildren[i].el\r\n                    el.removeChild(childEl)\r\n                }\r\n            }\r\n        }\r\n       \r\n    }\r\n\r\n}","import Watcher from \"./observe/watcher\";\r\nimport { createElementVNode, createTextVNode } from \"./vdom\";\r\nimport { patch } from \"./vdom/patch\";\r\n\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._update = function(vnode) {  //将vnode装化成真实dom\r\n        const vm = this;\r\n        const el = vm.$el;\r\n\r\n        const preVnode = vm._vnode;\r\n        vm._vnode = vnode;   //把组件第一次产生的虚拟节点保存到vnode上\r\n        if(preVnode) {  \r\n            //有的化表示之前渲染过了\r\n            vm.$el = patch(preVnode, vnode);  //diff算法执行 preVnode和vnode比对\r\n        } else {\r\n            vm.$el = patch(el, vnode);\r\n        }\r\n\r\n\r\n        //patch既有初始化的功能,又有更新的功能\r\n    }\r\n    //_c('div', {}, ...children)\r\n    Vue.prototype._c = function() {\r\n        return createElementVNode(this, ...arguments)\r\n    }\r\n    //_v(text)\r\n    Vue.prototype._v = function() {\r\n        return createTextVNode(this, ...arguments)\r\n    }\r\n    Vue.prototype._s = function(value) {\r\n        if(typeof value !== 'object') return value \r\n        return JSON.stringify(value)\r\n    }\r\n    Vue.prototype._render = function() {\r\n        //call让with中的this指向vm\r\n        //当渲染时会去实例中取值，我们就可以将属性和试图绑定在一起\r\n        return this.$options.render.call(this)  //通过ast语法转义生成的render方法\r\n    }\r\n}\r\nexport function mountComponent(vm, el) { //这里的el是通过querySelector处理过的\r\n    vm.$el = el;\r\n    //1.调用render方法产生虚拟节点，虚拟dom\r\n    // vm._update(vm._render());  //vm.$options.render()->返回虚拟节点\r\n    const updateComponent = () => {  //updateComponent渲染页面\r\n        vm._update(vm._render());  //vm.$options.render()->返回虚拟节点\r\n    }\r\n    let watcher = new Watcher(vm, updateComponent, true)  //true用于标识是一个渲染watcher\r\n\r\n    //2.根据虚拟Dom产生真实Dom\r\n\r\n    //3.插入到el元素中\r\n\r\n}\r\n\r\n//vue核心流程 创造了响应式数据 -> 模板转化成了ast语法树 -> 将ast语法树转换了render函数 -> 后续每次数据更新可以只执行render函数，无需再执行ast转化的过程\r\n\r\n//render函数会去产生虚拟节点（使用响应式数据）\r\n//根据虚拟的节点创造真实的Dom\r\n\r\nexport function callHook(vm, hook) {\r\n    const handlers = vm.$options[hook];\r\n    if(handlers) {\r\n        handlers.forEach(handler => handler.call(vm))\r\n    }\r\n}","\r\nimport { initState  } from \"./state\";\r\nimport { compileToFunction } from './compiler'\r\nimport { callHook, mountComponent } from \"./lifecycle\";\r\nimport { mergeOptions } from \"./utils\";\r\nexport function initMixin(Vue) {   \r\n    Vue.prototype._init = function(options) {  //初始化操作\r\n        const vm = this;\r\n        //this.constructor = Vue, 将Vue.options和用户的options合并\r\n        //定义的全局指令和过滤器..都会挂载到实例上(this.constructor可能是子组件)\r\n        vm.$options = mergeOptions(this.constructor.options, options)   //将用户的选项挂在原型实例上，防止其他原型属性上需要options\r\n\r\n        callHook(vm, 'beforeCreate')\r\n        //初始化状态（状态包括props,watch,computed等。。）\r\n        initState(vm)\r\n        callHook(vm, 'created')\r\n\r\n        if(options.el) {\r\n            vm.$mount(options.el)   //实现数据的挂载\r\n        }\r\n    }\r\n    Vue.prototype.$mount = function(el) {\r\n        const vm = this;\r\n        el = document.querySelector(el)\r\n        let ops = vm.$options\r\n        if(!ops.render) {  //先查找有没有render函数\r\n            let template; \r\n            if(!ops.template && el) {  //没有写模板 但是写了el\r\n                 //没有render看一下是否写了template,没写template采用外部的template\r\n                template = el.outerHTML\r\n            } else {\r\n                template = ops.template\r\n            }\r\n            //写了template就用写了的template\r\n            if(template) {\r\n                //需要对模板进行编译\r\n                const render = compileToFunction(template);\r\n                ops.render = render  //jsx最终会编译成h('xxx')\r\n            }\r\n        }\r\n        mountComponent(vm, el); //组件的挂载\r\n        //最终可以获取render方法\r\n\r\n        //script标签引用的vue.global.js,整个编译过程是在浏览器运行的\r\n        //runtime(运行时)是不包含模板编译的，整个编译过程是打包的时候通过loader来转义.vue文件的，用runtime的时候不能使用template\r\n    }\r\n}\r\n","// class Vue {}   //使用类方法创建会将所有方法耦合在一起。所以Vue使用构造函数扩展方法（Vue.prototype.a = ），把扩展的功能放到不同的文件方便管理\r\nimport { initGlobalAPI } from './globalAPI'\r\nimport { initMixin } from './init'\r\nimport { initLifeCycle } from './lifecycle'\r\nimport { initStateMixin } from './state'\r\n\r\nfunction Vue(options) {  \r\n    this._init(options)  //默认调用init\r\n}\r\ninitMixin(Vue)  //扩展了init方法\r\ninitLifeCycle(Vue)\r\ninitGlobalAPI(Vue)\r\ninitStateMixin(Vue)\r\n\r\n\r\n\r\nexport default Vue"],"names":["strats","LIFECYCLE","forEach","hook","p","c","concat","components","parentVal","childVal","res","Object","create","key","mergeOptions","parent","child","options","mergeField","hasOwnProperty","initGlobalAPI","Vue","_base","mixin","extend","Sub","_init","prototype","constructor","component","id","definition","Dep","subs","target","addDep","watcher","push","update","stack","pushTarget","popTarget","pop","length","oldArrayProto","Array","newArrayProto","methods","method","args","result","call","inserted","ob","__ob__","slice","observeArray","dep","notify","Observer","data","defineProperty","value","enumerable","isArray","__proto__","walk","keys","defineReactive","item","observe","dependArray","i","current","depend","childOb","get","set","newValue","Watcher","vm","exprOrfn","cb","renderWatcher","getter","deps","depIds","Set","lazy","dirty","user","undefined","has","add","addSub","queueWatcher","oldValue","queue","pending","flushSchedulerQueue","flushQueue","splice","q","run","nextTick","callbacks","waiting","flushCallbacks","cbs","timerFunc","Promise","resolve","then","MutationObserver","observer","textNode","document","createTextNode","characterData","textContent","setImmediate","setTimeout","initState","opts","$options","initData","computed","initComputed","watch","initWatch","handler","createWatcher","$watch","proxy","_data","watchers","_computedWatchers","userDef","defineComputed","setter","createComputedGetter","evaluate","initStateMixin","$nextTick","exprOrFn","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","ELEMENT_TYPE","TEXT_TYPE","currentParent","root","createASTElement","tag","attrs","type","children","start","node","chars","text","replace","end","advance","n","substring","parseStartTag","match","tagName","attr","name","textEnd","indexOf","startTagMatch","endTagMatch","getProps","str","split","reduce","JSON","stringify","defaultTagRE","gen","codegen","test","tokens","lastIndex","exec","index","trim","join","getChildren","map","ast","code","compileToFunction","template","render","Function","isReservedTag","includes","createElementVNode","vnode","Ctor","createComponentVnode","init","instance","componentInstance","componentOptions","$mount","createTextVNode","isSameVNode","vnode1","vnode2","createComponent","createElm","$el","el","createElement","patchProps","appendChild","oldProps","props","oldStyles","style","newStyles","removeAttribute","styleName","setAttribute","patch","oldVNode","isRealElement","nodeType","elm","parentElm","parentNode","newElm","insertBefore","nextSibling","removeChild","patchVNode","replaceChild","newChildren","oldChildren","updateChildren","mountChildren","innerHTML","oldStartIndex","newStartIndex","oldEndIndex","newEndIndex","oldStartVnode","newStartVnode","oldEndVnode","newEndVnode","makeIndexByKey","moveIndex","moveVnode","mapIndex","chidEl","anchor","childEl","initLifeCycle","_update","preVnode","_vnode","_c","arguments","_v","_s","_render","mountComponent","updateComponent","callHook","handlers","initMixin","querySelector","ops","outerHTML"],"mappings":"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"}